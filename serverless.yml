service: hotel-booking-api

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: eu-north-1
  profile: ${env:AWS_PROFILE}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:*"
        - "dynamodb:*"
        - "logs:*"
        - "apigateway:*"
      Resource: "*"
  role: arn:aws:iam::586794465159:role/bookingDevRole

package:
  individually: true

resources:
  Resources:
    HotelDb:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: HotelRooms
        AttributeDefinitions:
          - AttributeName: RoomID
            AttributeType: S
          - AttributeName: RoomType
            AttributeType: S
          - AttributeName: available
            AttributeType: N
        KeySchema:
          - AttributeName: RoomID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: RoomTypeAvailableIndex
            KeySchema:
              - AttributeName: RoomType
                KeyType: HASH
              - AttributeName: available
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
   
    HotelBookingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: HotelBookings
        AttributeDefinitions:
          - AttributeName: bookingID
            AttributeType: S
        KeySchema:
          - AttributeName: bookingID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST  
                     

functions:  
  getAvailableRooms:
    handler: functions/getAvailableRooms/index.checkAvailableRooms
    events:
      - http:
          path: /available-rooms
          method: get
          cors: true

      - http:
          path: /available-rooms/{roomType}
          method: get
          cors: true
          request:
            parameters:
              paths:
                roomType: false  # Optional parameter
  addRoom:
    handler: functions/addRoom/index.handler
    events:
      - http:
          path: /addRoom
          method: post  
          cors: true 

  cancelBooking:
    handler: functions/cancelBooking/index.cancelBooking
    events:
      - http:
          path: booking/{bookingId}
          method: delete
          cors: true
  postBooking:
    handler: functions/postBooking/index.handler
    events:
      - http:
          path: /booking
          method: post
          cors: true

  getBookings:
    handler: functions/getBookings/index.handler
    events:
      - http:
          path: /checkBooking
          method: get
          cors: true